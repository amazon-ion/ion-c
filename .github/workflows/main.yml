name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test_amazon_linux:
    name: ${{ format('Test ({0}, {1})', matrix.container-image, matrix.compiler.cc)}}
    strategy:
      matrix:
        container-image: ['amazonlinux:1', 'amazonlinux:2']
        compiler:
          - { cc: 'gcc', cxx: 'g++'}
          - { cc: 'clang', cxx: 'clang++' }
    runs-on: ubuntu-latest
    container: ${{ format('docker://{0}', matrix.container-image) }}
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - name: Install `which`
        run: yum install which -y
      - name: Install `git`
        # Amazon Linux needs a newer version of git installed for actions/checkout@v2
        run: yum install git -y
      - name: Install `make`
        run: yum install make -y
      - name: Install `cmake3`
        run: |
          yum install cmake3 -y
          ln -s `which cmake3` /usr/bin/cmake
      - name: Install `clang`
        if: matrix.compiler.cc == 'clang'
        run: yum install clang -y
      - name: Install `gcc`
        if: matrix.compiler.cc == 'gcc'
        run: yum install gcc -y
      - name: Install `g++`
        run: yum install gcc-c++ -y
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        run: |
          ./build-debug.sh
          ./build-release.sh
      - name: Test
        run: |
          ./build/debug/test/all_tests
          ./build/release/test/all_tests

  test_ubuntu_and_mac:
    name: ${{ format('Test ({0}, {1})', matrix.os, matrix.compiler.cc)}}
    strategy:
      matrix:
        os: ['macos-latest', 'ubuntu-latest']
        compiler:
          - { cc: 'gcc', cxx: 'g++'}
          - { cc: 'clang', cxx: 'clang++' }
        # gcc just redirects to clang on the macos vm; replace with a specific gcc alias
        exclude:
          - os: 'macos-latest'
            compiler: { cc: 'gcc', cxx: 'g++'}
        include:
          - os: 'macos-latest'
            compiler: { cc: 'gcc-11', cxx: 'g++-11'}
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        run: |
          ./build-debug.sh
          ./build-release.sh
      - name: Test
        run: |
          ./build/debug/test/all_tests
          ./build/release/test/all_tests

  documentation:
    name: Generate Documentation
    needs:
      - test_ubuntu_and_mac
      - test_amazon_linux
    runs-on: ubuntu-latest
    steps:
      - name: Install Doxygen
        run: sudo apt-get install doxygen -y
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run Doxygen
        run: doxygen ./Doxyfile
      - name: Deploy to gh-pages
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: "./docs/html"
